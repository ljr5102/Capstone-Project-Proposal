c
location_params
params
c
n
user
n
c
SecureRandom::urlsafe_base64(16)
auth_hash[:uid]
auth_hash[:extra][:raw_info][:email]
auth_hash[:extra][:raw_info]
auth_hash[:extra]
auth_hash[raw_info]
auth_hash[:raw_info]
auth_hash[:email_address]
auth_hash[:provider]
auth_hash
c
request.env['omniauth.auth']
rquest.env['omniauth.auth']
auth_hash
c
request.env
request.evn
request
auth_hash
c
task_params
c
task_params
task_params["estimate"] = nil
task_params["estimate"]
task_params
c
params
c
task_params
Task.find(params[:id]).estimate == ""
Task.find(params[:id]).estimate
Task.find(params[:id])
Task.find(params[:id]).update(task_params)
Task.find(params[:id])
@task.find(params[:id])
@task
task_params[:estimate]
task_params
task_params(:estimate)
params
c
params
c
params
c
n
s
n
c
task_params.keys[0] == "completed"
task_params.keys == "completed"
task_params.keys
task_params
params.keys
params
c
list_params
c
task_params
c
task_params[:image]
task_params
params
c
params
c
task_params
params
c
n
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
n
@user.valid?
n
user_params
c
user_params
params
c
Rack::Utils.parse_nested_query(params[:formData])
JSON.parse(params.first[1])
JSON.parse(params.first)
params.first
params
user_params
c
JSON[:formData].to_json
JSON.parse(params[:formData].to_json).first
JSON.parse(params[:formData])
JSON.parse("form"=>params[:formData])
JSON.parse(params)
params[:formData]
params
c
params
c
params
c
params
c
params
c
params
c
params[:user][:password]
params[:user][:password]]
params[:user][:username]
params
c
params
c
params[:user]
params
c
params
c
params[:id]
c
params
c
n
@task
n
@task
n
task_params
@task
q
@task
task_params.each do |key, value| @task[key] = value end
n
task_params
c
@task.update_attributes(task_params)
@task = Task.find(params[:id])
params[:id]
task_params
c
task_params
q
task_params
c
task_params
params
q
params["task"]
params
JSON.parse(params)
JSON.parse(params[:task])
task_params
params
params[:id]
c
params[:id]
params[:task]
params
c
q
c
q
c
Task.find(params[:id])
params
c
Task.last.start_date
Task.last
newTask.save!
newTask
params
c
newTask.valid?
newTask.priority = "hfds"
newTask.priority = "hfdsk;a"
newTask
newTask.valid?
newTask
task_params
c
n
newTask
n
newTask
n
newTask
n
newTask
n
task_priority
n
task_due_date
n
task_start_date
n
task_params
c
task_params[:priority].to_i
task_params[:completed]
params.is_a?(String)
JSON.parse(task_params)
task_params.first
task_params
JSON.parse(params[:task][:name])
JSON.parse(params[:task])
JSON.parse(params)
JSON.parse("#{task_params[:name]}")
Date.parse()
Date.parse("")
Date.parse(task_params[:start_date])
task_params[:start_date]
JSON.parse("#{task_params}")
JSON.parse(task_params)
task_params
JSON.parse(task_params)
JSON.serialize(task_params)
task_params
c
params
c
Date.parse(task_params[:start_date]).class
Date.parse(task_params[:start_date])
Date.new(task_params[:start_date])
DateTime.new(task_params[:start_date])
DateTimenew(task_params[:start_date])
task_params[:start_date].class
task_params[:start_date]
task_params
params[:start_date]
params
c
params
